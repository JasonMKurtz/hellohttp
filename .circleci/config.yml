version: 2.1
orbs:
  docker: circleci/docker@1.0
  gcp-auth: circleci/gcp-binary-authorization@0.5.2
  gcp-gke: circleci/gcp-gke@1.0.4
  gcr: circleci/gcp-gcr@0.7.1
  kube-orb: circleci/kubernetes@0.11.0

jobs:
  build-job: 
    environment:
        TAG: 1.0."$CIRCLE_BUILD_NUM"
        DOCKER_USER: $DOCKER_USER
        DOCKER_PASS: $DOCKER_PASS
        GOOGLE_PROJECT_ID: hellohttp-a
        GOOGLE_COMPUTE_ZONE: central
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - gcr/gcr-auth 
      - checkout
      - setup_remote_docker
      - docker/build:
          image: gcr.io/hellohttp-a/hellohttp
          tag: 1.0.<< pipeline.id >>
      - gcr/push-image:
          image: hellohttp
          tag: 1.0.<< pipeline.id >> 
  deploy-job:
    environment:
        GOOGLE_PROJECT_ID: hellohttp-a
        GOOGLE_COMPUTE_ZONE: us-central1-c
    docker:
      - image: circleci/buildpack-deps:stretch
    working_directory: /tmp/hellohttp
    steps:
      - gcr/gcr-auth 
      - setup_remote_docker
      - kube-orb/install 
      - gcp-gke/rollout-image:
          cluster: hellohttp-b 
          container: hellohttp
          deployment: hellohttp
          image: gcr.io/hellohttp-a/hellohttp
          tag: 1.0.<< pipeline.id >> 
      # - run:
          # kubectl set image deployment hellohttp hellohttp=gcr.io/hellohttp-a/hellohttp:1.0.$CIRCLE_BUILD_NUM
          #command: kubectl set image deployment hellohttp hellohttp=gcr.io/hellohttp-a/hellohttp:1.0.$CIRCLE_BUILD_NUM
          # Push Docker image to registry, update K8s deployment to use new image - `gcloud` command handles authentication and push all at once
          # The new image is now available in GCR for the GCP infrastructure to access, next, change permissions:
          # sudo chown -R ubuntu:ubuntu /home/ubuntu/.kube
          # Use `kubectl` to find the line that specifies the image to use for our container, replace with image tag of the new image. 
          # The K8s deployment intelligently upgrades the cluster by shutting down old containers and starting up-to-date ones.
          # kubectl patch deployment docker-hello-google -p '{"spec":{"template":{"spec":{"containers":[{"name":"docker-hello-google","image":"us.gcr.io/circle-ctl-test/hello:'"$CIRCLE_SHA1"'"}]}}}}'

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job 
      - deploy-job:
          requires:
            - build-job # Only deploy once the build job has completed
          filters:
            branches:
                only: master # Only deploy on the master branch